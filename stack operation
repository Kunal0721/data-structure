#include <iostream>
using namespace std;


class Stack{
	public :
		int *arr;
		int top, size;
	
	Stack(int size){
		this->size=size;
		arr = new int [size];
		top =-1;
	}	
	void push(int element){
		if(size-top>1){
			top++;
			arr[top] =element;
		}
		else{
			cout<<"Stack overflow"<<endl;
		}
	}
	void pop(){
		if (top>=0){
			top--;
		}
		else
			cout<<"stack underflow"<<endl;
	}
	int peek(){
		if(top>=0){
			return arr[top];
		}
		else
			cout<<"Stack is empty"<<endl;
	}
	bool isempty(){
		if (top ==-1){
			return true;
		}
		else
			return false;
	}
};

int main() {
		
		Stack st(5);
		st.push(69);
		st.push(56);
		st.push(85);
		st.push(6);
		
//		cout<<st.peek()<<endl;
//		st.pop();
//		cout<<st.peek()<<endl;
//		st.pop();
//		cout<<st.peek()<<endl;
//		st.pop();
//		cout<<st.peek()<<endl;
//		st.pop();
//		st.pop();
//		if(st.isempty()){
//			cout<<"Stack is empty";
//		}
//		else
//			cout<<"Stack is not empty";
//			
		while( !st.isempty() ){
			cout<<st.peek()<<endl;
			st.pop();
		}
		
//	stack <int> s;
//	s.push(3);
//	s.push(5);
//	cout<<"The top element of stack is :"<<s.top()<<endl;
//	s.pop();
//	if(s.empty()){
//		cout<<"The stack is empty";
//	}
//	else{
//		cout<<"The stack is not empty";
//	}
	return 0;
}
